{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost",
  "basePath": "/",
  "tags": [
    {
      "name": "get-customers-controller",
      "description": "Get Customers Controller"
    },
    {
      "name": "post-customers-controller",
      "description": "Post Customers Controller"
    }
  ],
  "paths": {
    "/customers": {
      "post": {
        "tags": [
          "post-customers-controller"
        ],
        "summary": "Create a new customer",
        "operationId": "createCustomerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customer",
            "description": "customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "201": {
            "description": "Successfully created customer",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "400": {
            "description": "Invalid customer",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Customer already exists",
            "schema": {
              "$ref": "#/definitions/CustomerNotFoundErrorDto"
            }
          }
        }
      }
    },
    "/customers/{accountNumber}": {
      "get": {
        "tags": [
          "get-customers-controller"
        ],
        "summary": "View a specific customer specified by account number",
        "operationId": "getCustomerUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "accountNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "400": {
            "description": "Invalid account number",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Customer not found",
            "schema": {
              "$ref": "#/definitions/CustomerNotFoundErrorDto"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddressDto": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "example": "GBR"
        },
        "county": {
          "type": "string",
          "example": "Northamptonshire"
        },
        "line1": {
          "type": "string",
          "example": "20 Seasame Street"
        },
        "line2": {
          "type": "string",
          "example": "My district"
        },
        "postcode": {
          "type": "string",
          "example": "NN4 0TJ"
        },
        "town": {
          "type": "string",
          "example": "Northampton"
        }
      },
      "title": "AddressDto"
    },
    "CustomerDto": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string",
          "example": 1111111111
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressDto"
          }
        },
        "firstName": {
          "type": "string",
          "example": "Joe"
        },
        "lastName": {
          "type": "string",
          "example": "Bloggs"
        }
      },
      "title": "CustomerDto"
    },
    "CustomerNotFoundErrorDto": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "error message"
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "example": 400
        }
      },
      "title": "CustomerNotFoundErrorDto"
    },
    "ErrorDto": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "error message"
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "example": 400
        }
      },
      "title": "ErrorDto"
    }
  }
}